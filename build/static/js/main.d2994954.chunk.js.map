{"version":3,"sources":["Components/Card.js","Components/ExpensesFilter.js","Components/ExpenseDate.js","Components/ExpenseItem.js","Components/ExpensesList.js","Components/Chart/ChartBar.js","Components/Chart/Chart.js","Components/ExpensesChart.js","Components/Expenses.js","Components/New Expense/ExpenseForm.js","Components/New Expense/NewExpenses.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expenses","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expense","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","Clicked","setClicked","onClick","preventDefault","onSubmit","expenseData","Date","onSaveExpenseData","type","min","step","NewExpenses","enteredExpenseData","random","onAddExpense","DUMMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d2994954.chunk.js","sourcesContent":["import { Children } from \"react\";\r\nimport \"./Card.css\"\r\n\r\nconst Card = (props) =>{\r\n    const classes = 'card ' + props.className;\r\n    \r\n    return(\r\n       <div className={classes}>{props.children}</div>\r\n    )\r\n\r\n}\r\n\r\nexport default Card ;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  \r\n  const dropDownChangeHandler = (event) =>{\r\n    props.onChangeFilter(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropDownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import \"./ExpenseDate.css\"\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","\r\nimport \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"./Card\"\r\n\r\nfunction ExpenseItem(props) {\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = (props) => {\r\n\r\n    if (props.items.length === 0) {\r\n        return (<h2 className=\"expenses-list__fallback\">Found No Expenses.</h2>)\r\n    }\r\n\r\n    return (\r\n        <ul className=\"expenses-list\">\r\n            {props.items.map(expenses =>\r\n                <ExpenseItem\r\n                    key={expenses.id}\r\n                    title={expenses.title}\r\n                    amount={expenses.amount}\r\n                    date={expenses.date} />)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ExpensesList;","import React from 'react';\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n  return (\r\n    <div className='chart-bar'>\r\n      <div className='chart-bar__inner'>\r\n        <div\r\n          className='chart-bar__fill'\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className='chart'>\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React from 'react';\r\n\r\nimport Chart from './Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;","import \"./Expenses.css\";\r\nimport Card from \"./Card\"\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport { useState } from \"react\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst Expenses = (props) => {\r\n\r\n  const [filteredYear, setFilteredYear] = useState('2021')\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  }\r\n\r\n  const filteredExpenses = props.expenses.filter((expense) => {\r\n      return expense.date.getFullYear().toString() === filteredYear;\r\n    })\r\n  \r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\r\n      <ExpensesChart expenses={filteredExpenses}/>\r\n      <ExpensesList items={filteredExpenses} />\r\n    </Card>\r\n\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from 'react';\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n\r\n  /*Initiatin UseState\r\n  =========================================================================================================================*/\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n\r\n  /*Asigning Click Handlers\r\n  ==========================================================================================================================*/\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value)\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value)\r\n  };\r\n\r\n\r\n\r\n  /*Submit Handlers\r\n  ============================================================================================================================*/\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    }\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n\r\n\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n  const [Clicked, setClicked] = useState(false)\r\n\r\n\r\n  const clickedHandler = (event) => {\r\n    event.preventDefault()\r\n    setClicked(true)\r\n  }\r\n\r\n  const cancleHandler = (event) => {\r\n    event.preventDefault()\r\n    setClicked(false)\r\n  }\r\n\r\n  if (Clicked === false) {\r\n    return (\r\n      <form>\r\n        <div className=\"new-expense__control\">\r\n          <button onClick={clickedHandler}>Add New Expenses</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n\r\n  if (Clicked === true) {\r\n    return (\r\n      <form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n          <div className=\"new-expense__control\">\r\n            <label>Title</label>\r\n            <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Amount</label>\r\n            <input type=\"number\" min=\"0.01\" step=\"0.01\" value={enteredAmount} onChange={amountChangeHandler} />\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Date</label>\r\n            <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" value={enteredDate} onChange={dateChangeHandler} />\r\n          </div>\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n          <button onClick={cancleHandler}>Cancle</button>\r\n          <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import \"./NewExpenses.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpenses = ( props) => {\r\n\r\n  const saveExpenseDataHandler=(enteredExpenseData)=>{\r\n    const expenseData={\r\n      ...enteredExpenseData,\r\n      id:Math.random().toString(),\r\n    };\r\n\r\n    props.onAddExpense(expenseData);\r\n  }\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpenses;\r\n","import { useState } from 'react';\nimport Card from './Components/Card';\nimport Expenses from \"./Components/Expenses\";\nimport NewExpenses from \"./Components/New Expense/NewExpenses\";\n\nconst DUMMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: 'e2',\n    title: 'New TV',\n    amount: 799.49,\n    date: new Date(2021, 2, 12)\n  },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMMY_EXPENSES);\n\n\n  const addExpenseHandler = (expense) => {\n    setExpenses(prevExpenses => {\n      return [expense , ...prevExpenses];\n    });\n  }\n\n  return (\n    <div>\n      <NewExpenses onAddExpense={addExpenseHandler} />\n      <Expenses expenses={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}